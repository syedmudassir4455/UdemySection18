{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\"; // // import { createStore } from 'redux';\n\nconst initilaCounterState = {\n  counter: 0,\n  showCounter: true\n}; // const counterSlice = createSlice({\n//   name: \"counter\",\n//   initilaState: initilaCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.amount;\n//     },\n//     increasePayload(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"Authenticaion\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // // // const counterReducer = (state = initialState, action) => {\n// // //   if (action.type === 'increment') {\n// // //     return {\n// // //       counter: state.counter + 1,\n// // //       showCounter:state.showCounter\n// // //     };\n// // //   }\n// // //   if(action.type === 'incrementby5'){\n// // //     return{\n// // //         counter:state.counter + 5,\n// // //         showCounter:state.showCounter\n// // //     }\n// // // }\n// // //   if(action.type === 'increase'){\n// // //        return{\n// // //            counter:state.counter + action.amount,\n// // //            showCounter :state.showCounter\n// // //        }\n// // //   }\n// // //   if (action.type === 'decrement') {\n// // //     return {\n// // //       counter: state.counter - 1,\n// // //     };\n// // //   }\n// // //    if(action.type === 'toggle'){\n// // //         return{\n// // //             showCounter : !state.showCounter,\n// // //             counter:state.counter\n// // //         }\n// // //    }\n// // //   return state;\n// // // };\n// // // const store = createStore(counterReducer);\n// // //const store = createStore(counterSlice.reducer)\n// const store = configureStore({\n//   //   reducer:  counterSlice.reducer  // reducer can also an object which acts as a Map of reducers\n//   reduder: { counter: counterSlice.reducer, auth: authSlice.reducer },\n// });\n// export const counterActions = counterSlice.actions;\n// export const authActions = authSlice.actions;\n// export default store;\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/syed/Udemy18reduxsection/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initilaCounterState","counter","showCounter","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counterSlice","auth","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;;AAMC,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,eADsB;AAE5BC,EAAAA,YAAY,EAAEJ,gBAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACD;;AANO;AAHkB,CAAD,CAA7B,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;;AAIA,MAAMQ,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAE;AAAEZ,IAAAA,OAAO,EAAEa,YAAY,CAACD,OAAxB;AAAiCE,IAAAA,IAAI,EAAEV,SAAS,CAACQ;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMG,cAAc,GAAGF,YAAY,CAACG,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACY,OAA9B;AAEP,eAAeL,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n// // import { createStore } from 'redux';\n\n\n\n\n\n const initilaCounterState = { counter: 0, showCounter: true };\n\n\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initilaState: initilaCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = state.counter + action.amount;\n//     },\n\n//     increasePayload(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n\nconst initialAuthState = {\n  isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n  name: \"Authenticaion\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\n\n  \n  \n  \n\n// // // const counterReducer = (state = initialState, action) => {\n// // //   if (action.type === 'increment') {\n// // //     return {\n// // //       counter: state.counter + 1,\n// // //       showCounter:state.showCounter\n// // //     };\n// // //   }\n\n// // //   if(action.type === 'incrementby5'){\n// // //     return{\n// // //         counter:state.counter + 5,\n// // //         showCounter:state.showCounter\n// // //     }\n// // // }\n\n// // //   if(action.type === 'increase'){\n// // //        return{\n// // //            counter:state.counter + action.amount,\n// // //            showCounter :state.showCounter\n// // //        }\n// // //   }\n\n// // //   if (action.type === 'decrement') {\n// // //     return {\n// // //       counter: state.counter - 1,\n// // //     };\n// // //   }\n\n// // //    if(action.type === 'toggle'){\n// // //         return{\n// // //             showCounter : !state.showCounter,\n// // //             counter:state.counter\n// // //         }\n// // //    }\n// // //   return state;\n// // // };\n\n// // // const store = createStore(counterReducer);\n\n// // //const store = createStore(counterSlice.reducer)\n\n// const store = configureStore({\n//   //   reducer:  counterSlice.reducer  // reducer can also an object which acts as a Map of reducers\n//   reduder: { counter: counterSlice.reducer, auth: authSlice.reducer },\n// });\n\n\n\n// export const counterActions = counterSlice.actions;\n// export const authActions = authSlice.actions;\n\n// export default store;\n\n\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}