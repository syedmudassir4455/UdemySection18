{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit'; // import { createStore } from 'redux';\n\nconst initilaCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initilaState: initilaCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    increasePayload(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialCounterState = createSlice({\n  name: ''\n}); // // const counterReducer = (state = initialState, action) => {\n// //   if (action.type === 'increment') {\n// //     return {\n// //       counter: state.counter + 1,\n// //       showCounter:state.showCounter\n// //     };\n// //   }\n// //   if(action.type === 'incrementby5'){\n// //     return{\n// //         counter:state.counter + 5,\n// //         showCounter:state.showCounter\n// //     }\n// // }\n// //   if(action.type === 'increase'){\n// //        return{\n// //            counter:state.counter + action.amount,\n// //            showCounter :state.showCounter\n// //        }\n// //   }\n// //   if (action.type === 'decrement') {\n// //     return {\n// //       counter: state.counter - 1,\n// //     };\n// //   }\n// //    if(action.type === 'toggle'){\n// //         return{\n// //             showCounter : !state.showCounter,\n// //             counter:state.counter\n// //         }\n// //    }\n// //   return state;\n// // };\n// // const store = createStore(counterReducer);\n// //const store = createStore(counterSlice.reducer)\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/syed/Udemy18reduxsection/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initilaCounterState","counter","showCounter","counterSlice","name","initilaState","reducers","increment","state","decrement","increase","action","amount","increasePayload","payload","toggleCounter","initialCounterState","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,cAArB,QAA2C,kBAA3C,C,CAEA;;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAEL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,SADsB;AAE5BC,EAAAA,YAAY,EAAEL,mBAFc;AAG5BM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHI;;AAILQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANI;;AAOLS,IAAAA,QAAQ,CAAEF,KAAF,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAcU,MAAM,CAACC,MAArC;AAEH,KAVI;;AAYLC,IAAAA,eAAe,CAAEL,KAAF,EAAQG,MAAR,EAAgB;AAC3BH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAeU,MAAM,CAACG,OAAtC;AAEH,KAfI;;AAgBLC,IAAAA,aAAa,CAAEP,KAAF,EAAS;AAClBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAlBI;AAHmB,CAAD,CAA/B;AAwBA,MAAMc,mBAAmB,GAAGlB,WAAW,CAAC;AAEpCM,EAAAA,IAAI,EAAE;AAF8B,CAAD,CAAvC,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAKA,MAAMa,KAAK,GAAElB,cAAc,CAAC;AAC1BmB,EAAAA,OAAO,EAAGf,YAAY,CAACe;AADG,CAAD,CAA3B;AAIC,OAAO,MAAMC,cAAc,GAAIhB,YAAY,CAACiB,OAArC;AAGP,eAAeH,KAAf","sourcesContent":["import { createSlice,configureStore } from '@reduxjs/toolkit';\n\n// import { createStore } from 'redux';\n\nconst initilaCounterState = { counter: 0, showCounter: true };\n\nconst counterSlice =createSlice({\n    name :'counter',\n    initilaState :initilaCounterState,\n    reducers:{\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase (state,action) {\n            state.counter = state.counter+action.amount\n           \n        },\n\n        increasePayload (state,action) {\n            state.counter = state.counter +action.payload\n\n        },\n        toggleCounter (state) {\n            state.showCounter = !state.showCounter\n        },\n    }\n})\nconst initialCounterState = createSlice({\n\n    name :''\n\n})\n\n// // const counterReducer = (state = initialState, action) => {\n// //   if (action.type === 'increment') {\n// //     return {\n// //       counter: state.counter + 1,\n// //       showCounter:state.showCounter\n// //     };\n// //   }\n\n// //   if(action.type === 'incrementby5'){\n// //     return{\n// //         counter:state.counter + 5,\n// //         showCounter:state.showCounter\n// //     }\n// // }\n\n// //   if(action.type === 'increase'){\n// //        return{\n// //            counter:state.counter + action.amount,\n// //            showCounter :state.showCounter\n// //        }\n// //   }\n\n// //   if (action.type === 'decrement') {\n// //     return {\n// //       counter: state.counter - 1,\n// //     };\n// //   }\n\n\n// //    if(action.type === 'toggle'){\n// //         return{\n// //             showCounter : !state.showCounter,\n// //             counter:state.counter\n// //         }\n// //    }\n// //   return state;\n// // };\n\n// // const store = createStore(counterReducer);\n\n// //const store = createStore(counterSlice.reducer)\n\n\n\n\nconst store =configureStore({\n  reducer:  counterSlice.reducer\n})\n\n export const counterActions  = counterSlice.actions;\n\n\n export default store;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}