{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport Counter from \"../components/Counter\"; // const initilaCounterState = { counter: 0, showCounter: true };\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initialState: initilaCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },                                         // defined a new Component called Counter.js\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increasePayload(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// const initialAuthState = {\n//   isAuthenticated: false,\n// };\n// const authSlice = createSlice({\n//   name: \"Authenticaion\",\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {                     // defined a new Component called AUth.js\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//   },\n// });\n// // // const counterReducer = (state = initialState, action) => {\n// // //   if (action.type === 'increment') {\n// // //     return {\n// // //       counter: state.counter + 1,\n// // //       showCounter:state.showCounter\n// // //     };\n// // //   }\n// // //   if(action.type === 'incrementby5'){\n// // //     return{\n// // //         counter:state.counter + 5,\n// // //         showCounter:state.showCounter\n// // //     }\n// // // }\n// // //   if(action.type === 'increase'){\n// // //        return{\n// // //            counter:state.counter + action.amount,\n// // //            showCounter :state.showCounter\n// // //        }\n// // //   }\n// // //   if (action.type === 'decrement') {\n// // //     return {\n// // //       counter: state.counter - 1,\n// // //     };\n// // //   }\n// // //    if(action.type === 'toggle'){\n// // //         return{\n// // //             showCounter : !state.showCounter,\n// // //             counter:state.counter\n// // //         }\n// // //    }\n// // //   return state;\n// // // };\n// // // const store = createStore(counterReducer);\n// // //const store = createStore(counterSlice.reducer)\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/syed/Udemy18reduxsection/01-starting-project/src/store/index.js"],"names":["configureStore","Counter","store","reducer","counter","counterSlice","auth","authSlice","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAC3BG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OAAxB;AAAiCG,IAAAA,IAAI,EAAEC,SAAS,CAACJ;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMK,cAAc,GAAGH,YAAY,CAACI,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAA9B;AAEP,eAAeP,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nimport Counter from \"../components/Counter\";\n\n// const initilaCounterState = { counter: 0, showCounter: true };\n\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initialState: initilaCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },                                         // defined a new Component called Counter.js\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increasePayload(state, action) {\n//       state.counter = state.counter + action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// const initialAuthState = {\n//   isAuthenticated: false,\n// };\n\n// const authSlice = createSlice({\n//   name: \"Authenticaion\",\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {                     // defined a new Component called AUth.js\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//   },\n// });\n\n// // // const counterReducer = (state = initialState, action) => {\n// // //   if (action.type === 'increment') {\n// // //     return {\n// // //       counter: state.counter + 1,\n// // //       showCounter:state.showCounter\n// // //     };\n// // //   }\n\n// // //   if(action.type === 'incrementby5'){\n// // //     return{\n// // //         counter:state.counter + 5,\n// // //         showCounter:state.showCounter\n// // //     }\n// // // }\n\n// // //   if(action.type === 'increase'){\n// // //        return{\n// // //            counter:state.counter + action.amount,\n// // //            showCounter :state.showCounter\n// // //        }\n// // //   }\n\n// // //   if (action.type === 'decrement') {\n// // //     return {\n// // //       counter: state.counter - 1,\n// // //     };\n// // //   }\n\n// // //    if(action.type === 'toggle'){\n// // //         return{\n// // //             showCounter : !state.showCounter,\n// // //             counter:state.counter\n// // //         }\n// // //    }\n// // //   return state;\n// // // };\n\n// // // const store = createStore(counterReducer);\n\n// // //const store = createStore(counterSlice.reducer)\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}